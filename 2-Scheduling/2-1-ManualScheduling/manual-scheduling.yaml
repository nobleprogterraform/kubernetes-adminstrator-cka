apiVersion: v1
kind: Pod
metadata:
 name: nginx
 labels:
  name: nginx
spec:
 containers:
 - name: nginx
   image: nginx
   ports:
   - containerPort: 8080
 nodeName: node02


 Manual scheduling:
	- What do you do when you do not have a scheduler in your cluster? You probably do not want to rely on the built-in scheduler,
		and instead want to schedule the pod yourself.
	- So how exactly does a scheduler work in the backend? Let's start with a simple pod definition file.
		Every pod has a field called Node Name that, by default, is not set. You don't typically specify this field
		when you create the pod manifest file. Kubernetes adds it automatically. The scheduler goes through all the pods
		and looks for those that do not have this property set. Those are the candidates for scheduling. It then identifies the right 
		node for the pod by running the scheduling algorithm
	- So if there is no scheduler to monitor and schedule nodes, what happens? The pods continue to be in a pending state
	- Well, without a scheduler, the easiest way to schedule a pod is to simply set the node name field to the name of the node
		in your pod specification file while creating the pod. You can only specify the node name at creation time.
		Kubernetes won't allow you to modify the node name property of a pod
	- so another way to assign a node to an existing pod is to create a binding object and send a POST request
		to the pod's binding API,
